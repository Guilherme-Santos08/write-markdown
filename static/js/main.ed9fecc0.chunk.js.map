{"version":3,"sources":["styles/GlobalStyle.js","components/SyntaxHighlighter/index.jsx","components/InpuWrite/styles.js","components/InpuWrite/index.jsx","app.js","App.jsx","index.js"],"names":["createGlobalStyle","PreBlock","children","rest","className","lang","startsWith","replace","language","style","CodeStyle","CodeBlock","Container","styled","div","InputWrite","useState","inputMarked","setInputMarked","spellcheck","placeholder","onChange","e","target","value","options","overrides","pre","Div","App","GlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAEeA,cAAf,+P,yDCeaC,EAAW,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAaC,EAAW,4BACjD,MAAI,SAAUD,GAAiC,SAArBA,EAAQ,KAdlB,SAAC,GAA6B,IAA3BE,EAA0B,EAA1BA,UAAWF,EAAe,EAAfA,SAC1BG,EAAO,OAIX,OAHID,GAAaA,EAAUE,WAAW,WACpCD,EAAOD,EAAUG,QAAQ,QAAS,KAGlC,cAAC,IAAD,CAAmBC,SAAUH,EAAMI,MAAOC,IAA1C,SACGR,IAQIS,CAAUT,EAAQ,OAEpB,+CAASC,GAAT,aAAgBD,MCnBZU,EAAYC,IAAOC,IAAV,umDCoCPC,EA/BI,WAAO,IAAD,EACeC,mBAAS,IADxB,mBAChBC,EADgB,KACHC,EADG,KAMvB,OACE,eAACN,EAAD,WACE,qBAAKR,UAAU,aAAf,SACE,0BACEe,WAAW,QACXC,YAAY,eACZC,SAVa,SAACC,GACpBJ,EAAeI,EAAEC,OAAOC,QAUlBA,MAAOP,MAGX,qBAAKb,UAAU,aAAf,SACE,cAAC,IAAD,CACEqB,QAAS,CACPC,UAAW,CACTC,IAAK1B,IAHX,SAOGgB,UC7BEW,EAAMf,IAAOC,IAAV,kGCYDe,MATf,WACE,OACE,eAACD,EAAD,CAAKxB,UAAU,MAAf,UACE,cAAC0B,EAAD,IACA,cAAC,EAAD,QCLNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ed9fecc0.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n  body {\n    background-color: #14274E;\n    color: white;\n    font-size: 16px;\n    font-family: 'Roboto', sans-serif;\n    overflow-x: hidden;\n  }\n`;\n","import { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { dracula as CodeStyle } from \"react-syntax-highlighter/dist/esm/styles/prism\";\n\n// https://stackoverflow.com/questions/65807962/how-to-apply-code-highlights-within-markdown-to-jsx-package-in-react\nconst CodeBlock = ({ className, children }) => {\n  let lang = \"text\"; // default monospaced text\n  if (className && className.startsWith(\"lang-\")) {\n    lang = className.replace(\"lang-\", \"\");\n  }\n  return (\n    <SyntaxHighlighter language={lang} style={CodeStyle}>\n      {children}\n    </SyntaxHighlighter>\n  );\n};\n\n// markdown-to-jsx uses <pre><code/></pre> for code blocks.\nexport const PreBlock = ({ children, ...rest }) => {\n  if (\"type\" in children && children[\"type\"] === \"code\") {\n    return CodeBlock(children[\"props\"]);\n  }\n  return <pre {...rest}>{children}</pre>;\n};","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  color: black;\n  background-color: white;\n\n  width: 100vw;\n  min-height: 100vh;\n\n  .writeInput {\n    width: 50vw;\n    min-height: 100vh;\n\n    textarea {\n      background-color: #282a36;\n      color: white;\n      line-height: 1.4;\n\n      width: 100%;\n      height: 100%;\n      padding: 30px;\n      font-size: 1.2rem;\n\n      resize: none;\n      border: none;\n      outline: none;\n    }\n  }\n  .showMarked {\n    padding: 30px;\n    color: #24292e;\n    line-height: 1.4;\n    & :nth-child(1) {\n      margin-top: 0 !important;\n    }\n\n    width: 50vw;\n    min-height: 100vh;\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6 {\n      padding-bottom: 0.5rem;\n      border-bottom: 1px solid #eaecef;\n      margin-bottom: 15px;\n      margin-top: 20px;\n\n      font-weight: 600 !important;\n      line-height: 1.25;\n\n      & code {\n        font-weight: 600;\n      }\n    }\n    code {\n      font-family: \"Roboto\", sans-serif;\n      font-size: 85%;\n\n      padding: 0.3rem 0.6rem;\n      margin: 0;\n\n      background-color: rgba(27, 31, 35, 0.05);\n      border-radius: 3px;\n    }\n\n    blockquote,\n    details,\n    dl,\n    ol,\n    p,\n    pre,\n    table,\n    ul {\n      margin-top: 0;\n      margin-bottom: 16px;\n    }\n\n    ol,\n    ul {\n      padding-left: 1.8rem;\n    }\n\n    li + li {\n      margin-top: 3px;\n    }\n\n    p {\n      font-weight: normal;\n    }\n\n    a {\n      color: #6272a4;\n      text-decoration: none;\n      &:hover {\n        text-decoration: underline;\n      }\n    }\n  }\n`;\n","import { useState } from \"react\";\nimport Markdown from \"markdown-to-jsx\";\n\nimport { PreBlock } from \"../SyntaxHighlighter\";\n\nimport { Container } from \"./styles\";\n\nconst InputWrite = () => {\n  const [inputMarked, setInputMarked] = useState(\"\");\n  const handleChange = (e) => {\n    setInputMarked(e.target.value);\n  };\n\n  return (\n    <Container>\n      <div className=\"writeInput\">\n        <textarea\n          spellcheck=\"false\"\n          placeholder=\"Escreva aqui\"\n          onChange={handleChange}\n          value={inputMarked}\n        />\n      </div>\n      <div className=\"showMarked\">\n        <Markdown\n          options={{\n            overrides: {\n              pre: PreBlock,\n            },\n          }}\n        >\n          {inputMarked}\n        </Markdown>\n      </div>\n    </Container>\n  );\n};\n\nexport default InputWrite;\n","import styled from \"styled-components\";\n\nexport const Div = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100vw;\n`;\n","import React from \"react\";\nimport GlobalStyle from \"./styles/GlobalStyle\";\nimport InputWrite from \"./components/InpuWrite\";\nimport { Div } from \"./app.js\";\n\nfunction App() {\n  return (\n    <Div className=\"app\">\n      <GlobalStyle />\n      <InputWrite />\n    </Div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}